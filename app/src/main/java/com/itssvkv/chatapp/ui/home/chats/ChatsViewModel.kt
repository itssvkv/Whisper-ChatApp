package com.itssvkv.chatapp.ui.home.chatsimport android.util.Logimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.google.firebase.firestore.QuerySnapshotimport com.itssvkv.chatapp.data.local.repository.FirebaseRepositoryimport com.itssvkv.chatapp.models.ChatRoomimport com.itssvkv.chatapp.utils.Common.TAGimport dagger.hilt.android.lifecycle.HiltViewModelimport kotlinx.coroutines.launchimport javax.inject.Inject@HiltViewModelclass ChatsViewModel @Inject constructor(    private val firebaseRepository: FirebaseRepository) : ViewModel() {    private var _query = MutableLiveData<QuerySnapshot?>()    val query: LiveData<QuerySnapshot?>        get() = _query    init {        getAllChatRooms()    }    private fun getAllChatRooms() {        viewModelScope.launch {            firebaseRepository.getAllChatRooms().addSnapshotListener { value, _ ->                _query.postValue(value)            }        }    }    fun updateChatRooms() {        Log.d(TAG, "out: ")        viewModelScope.launch {            firebaseRepository.getAllChatRooms().get().addOnSuccessListener {                Log.d(TAG, "ChatsViewModel: ${it?.toObjects(ChatRoom::class.java)}")                _query.postValue(it)            }.addOnFailureListener {                Log.d(TAG, "Faileddddd:$it")            }        }    }}