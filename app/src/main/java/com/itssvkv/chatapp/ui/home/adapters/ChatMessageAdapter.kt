package com.itssvkv.chatapp.ui.home.adaptersimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.itssvkv.chatapp.data.local.repository.FirebaseRepositoryimport com.itssvkv.chatapp.databinding.ChatMessageRecyclerBindingimport com.itssvkv.chatapp.models.ChatMessageimport javax.inject.Injectclass ChatMessageAdapter @Inject constructor(    val firebaseRepository: FirebaseRepository) :    ListAdapter<ChatMessage, ChatMessageAdapter.MessageViewHolder>(Comparator) {    inner class MessageViewHolder(private val binding: ChatMessageRecyclerBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(item: ChatMessage) {            if (item.senderId == firebaseRepository.currentUserId()) {                binding.rightMessage.visibility = View.GONE                binding.leftMessage.visibility = View.VISIBLE                binding.leftMessage.text = item.message            } else {                binding.leftMessage.visibility = View.GONE                binding.rightMessage.visibility = View.VISIBLE                binding.rightMessage.text = item.message            }//            if (item.senderId == firebaseRepository.currentUserId()){//                binding.rightMessage.setBackgroundColor(Color.RED)//            }else{//                binding.rightMessage.setBackgroundColor(Color.BLUE)//            }//            binding.rightMessage.text = item.message        }    }    private object Comparator : DiffUtil.ItemCallback<ChatMessage>() {        override fun areItemsTheSame(oldItem: ChatMessage, newItem: ChatMessage) =            oldItem == newItem        override fun areContentsTheSame(oldItem: ChatMessage, newItem: ChatMessage) =            oldItem == newItem    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MessageViewHolder {        val binding =            ChatMessageRecyclerBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return MessageViewHolder(binding)    }    override fun onBindViewHolder(holder: MessageViewHolder, position: Int) {        val item = getItem(position)        item.let {            holder.bind(it)        }    }}