package com.itssvkv.chatapp.ui.home.adaptersimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.bumptech.glide.request.RequestOptionsimport com.itssvkv.chatapp.databinding.OneUserPostsRecyclerBindingimport com.itssvkv.chatapp.models.Postsimport com.itssvkv.chatapp.utils.Common.TAGclass OneUserPostsAdapter :    androidx.recyclerview.widget.ListAdapter<Posts, OneUserPostsAdapter.PostsViewHolder>(Comparator) {    inner class PostsViewHolder(val binding: OneUserPostsRecyclerBinding) :        RecyclerView.ViewHolder(binding.root) {        fun bind(posts: Posts) {            if (posts.postPhoto != "null") {                Log.d(TAG, "bind: posts$posts")                binding.layout.visibility =View.VISIBLE                Glide.with(binding.onePhoto.context)                    .load(posts.postPhoto)                    .apply(RequestOptions().dontTransform())                    .override(400, 400)                    .into(binding.onePhoto)            }else{                binding.layout.visibility = View.GONE            }        }    }    private object Comparator : DiffUtil.ItemCallback<Posts>() {        override fun areItemsTheSame(oldItem: Posts, newItem: Posts): Boolean {            return oldItem.postId == newItem.postId        }        override fun areContentsTheSame(oldItem: Posts, newItem: Posts): Boolean {            return oldItem == newItem        }    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PostsViewHolder {        val binding =            OneUserPostsRecyclerBinding.inflate(LayoutInflater.from(parent.context), parent, false)        return PostsViewHolder(binding)    }    override fun onBindViewHolder(holder: PostsViewHolder, position: Int) {        val onePost = getItem(position)        onePost?.let { posts ->            holder.bind(posts = posts)        }    }}